{"ast":null,"code":"import axios from'axios';var base_url='http://nodeserver.mydevfactory.com:1443/';var condition=navigator.onLine?'online':'offline';export var Network=function Network(endpoint,method,body){return new Promise(function(resolve,reject){if(condition==='online'){axios({method:method,url:\"\".concat(base_url).concat(endpoint),headers:{'Content-Type':'application/json',Authorization:body?\"Bearer \".concat(body.authToken):\"\"},data:body}).then(function(response){resolve(response.data);}).catch(function(error){// console.log(\"error========>\", error);\n// Toast.show('Something went wrong. Please try again !')\nreject(error);});}else{alert(\"OFFLINE\");}});};","map":{"version":3,"sources":["/Users/asif/Documents/Uday/website/fit4yoursport/src/App/Services/Api.js"],"names":["axios","base_url","condition","navigator","onLine","Network","endpoint","method","body","Promise","resolve","reject","url","headers","Authorization","authToken","data","then","response","catch","error","alert"],"mappings":"AACA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,GAAIC,CAAAA,QAAQ,CAAG,0CAAf,CACA,GAAIC,CAAAA,SAAS,CAAGC,SAAS,CAACC,MAAV,CAAmB,QAAnB,CAA8B,SAA9C,CAEA,MAAO,IAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,QAAD,CAAWC,MAAX,CAAmBC,IAAnB,CAA4B,CACjD,MAAO,IAAIC,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB,CACtC,GAAIT,SAAS,GAAK,QAAlB,CAA4B,CAC1BF,KAAK,CAAC,CACJO,MAAM,CAANA,MADI,CAEJK,GAAG,WAAKX,QAAL,SAAgBK,QAAhB,CAFC,CAGJO,OAAO,CAAE,CACP,eAAgB,kBADT,CAEPC,aAAa,CAAEN,IAAI,kBAAaA,IAAI,CAACO,SAAlB,EAAgC,EAF5C,CAHL,CAOJC,IAAI,CAAER,IAPF,CAAD,CAAL,CASGS,IATH,CASQ,SAAUC,QAAV,CAAoB,CACxBR,OAAO,CAACQ,QAAQ,CAACF,IAAV,CAAP,CACD,CAXH,EAYGG,KAZH,CAYS,SAAUC,KAAV,CAAiB,CACtB;AACA;AACAT,MAAM,CAACS,KAAD,CAAN,CACD,CAhBH,EAiBD,CAlBD,IAkBO,CACLC,KAAK,CAAC,SAAD,CAAL,CACD,CACF,CAtBM,CAAP,CAuBD,CAxBM","sourcesContent":["\nimport axios from 'axios'\nvar base_url = 'http://nodeserver.mydevfactory.com:1443/';\nvar condition = navigator.onLine ? 'online' : 'offline';\n\nexport const Network = (endpoint, method, body) => {\n  return new Promise((resolve, reject) => {\n    if (condition === 'online') {\n      axios({\n        method,\n        url: `${base_url}${endpoint}`,\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: body ? `Bearer ${body.authToken}` : \"\"\n        },\n        data: body\n      })\n        .then(function (response) {\n          resolve(response.data)\n        })\n        .catch(function (error) {\n          // console.log(\"error========>\", error);\n          // Toast.show('Something went wrong. Please try again !')\n          reject(error)\n        });\n    } else {\n      alert(\"OFFLINE\")\n    }\n  });\n}"]},"metadata":{},"sourceType":"module"}